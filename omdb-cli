#!/bin/bash
#
################################################################################
#
# SCRIPT    omdb-cli
# AUTOR     Pedro Fernandes
# E-MAIL    pedrobfernandes37@gmail.com
# DATA      17-06-2021
#
################################################################################
#
# DESCRIÇÃO:
#
# Script para pegar dados dos filmes e séries do site
# 'https://www.omdbapi.com'.
# Precisa pegar a chave gratuita da API no site.
# Coloca a chave na variável 'Key' na secção PARÂMETROS.
# Variável 'FoldWidth' contém o valor para a opção -w|--width
# do comando fold. Para trocar, pode alterar o valor no script
# ou simplesmente chamar o script: $FoldWidth=valor ./omdb-cli
#
################################################################################
#
# DEPÊNDENCIAS/COMANDOS USADOS:
#
# * gawk
# * sed
# * fold
# * curl
#
################################################################################
#
# VERSÂO/CHANGELOG:
#
# 1.0 - 27-06-2021
#
### Script completado e testado. Removidos caracteres
### estranhos do output do json.
#
# 2.0 - 10-10-2021
#
### Script recriado quase do zero, para não usar
### tanto sed e pipes, e para ficar mais 'limpo'
### Adicionados mais testes para capturar erros.
#
################################################################################
#
##### PARÂMETROS #####
#
## Sua chave da API aqui
Key=''

## Aqui você coloca a largura para o comando fold
## para a opção -w. Basta trocar o número.
FoldWidth=${FoldWidth:=100}

## A partir daqui não precisa mexer mais.
UserAgent=$(type -p curl)
ApiKey='&apikey='
QueryDatabase='https://www.omdbapi.com/?'
TitleQuery='t='
IdQuery='i='
StoryLine='&plot='
ReleasedYear='&y='
Category='&type='
Plot=${Plot:-short}
CommandLine=${ApiKey}${Key}
#
################################################################################
#
##### FUNÇÕES #####

function ErrorExit {

echo ${0##*/}: $@ >&2
exit 1

}

function Usage {

clear
cat <<EOF
Uso: ${0##*/} -T TÍTULO | -i ID [OPÇÕES...]

MANDATÓRIO:

-T TÍTULO   Especifica o título do filme ou série.
-i ID       Especifica o ID do imdb. ID é tt seguido de 7 a 8 digitos.

* Embora estas opções sejam mandatórias, elas são também mutuamente exclusivas.
  Ou usa -T TÍTULO ou -i ID, mas não as duas juntas.

OPÇÕES:

-t TIPO     Especifica se é filme ou série. Aceita movie | serie
-p SINÓPSE  Especifica se quer a sinópse breve ou completa. Aceita full | short.
-y ANO      Especifica o ano do filme ou série. Aceita 2008 apenas, sem dia ou mês
-h AJUDA    Mostra esta ajuda e sai.

* Se filme ou série tiver espaços, tem que colocar entre aspas.

EOF
exit

}

function Parser {

clear

# Remove cararacteres estranhos
# e as 'caixas e chaves dos arrays e dicionários'
# do json retornado.
sed '
s!\(,\)"!\n"!g
s/[][{}]//g
s!\(\\"\)\([^\\"]*\)\(\\"\)!\2!g
s/&quot;//g
s!\(&\)\(amp;\)!\1!g' |

# Colocamos o que queremos no array
# e imprimimos bonitinho o final 'END'
gawk -F\" '
$2 ~ /Title/{Output[$2] = $4};
$2 ~ /Year/{Output[$2] = $4};
$2 ~ /Released/{Output[$2] = $4};
$2 ~ /Runtime/{Output[$2] = $4};
$2 ~ /Genre/{Output[$2] = $4};
$2 ~ /Director/{Output[$2] = $4};
$2 ~ /Writer/{Output[$2] = $4};
$2 ~ /Actors/{Output[$2] = $4};
$2 ~ /Language/{Output[$2] = $4};
$2 ~ /Country/{Output[$2] = $4};
$2 ~ /Awards/{Output[$2] = $4};
$2 ~ /imdbRating/{Output["Rating"] = $4};
$2 ~ /Type/{Output[$2] = $4};
$2 ~ /totalSeasons/{Output[$2] = $4};
$2 ~ /Plot/{Output[$2] = $4};

END {

{printf "%-8s\t\t%-8s\n", "Title", Output["Title"]};
{printf "%-8s\t\t%-8s\n", "Year", Output["Year"]};
{printf "%-8s\t\t%-8s\n", "Released", Output["Released"]};
{printf "%-8s\t\t%-8s\n", "Runtime", Output["Runtime"]};
{printf "%-8s\t\t%-8s\n", "Genre", Output["Genre"]};
{printf "%-8s\t\t%-8s\n", "Director", Output["Director"]};
{printf "%-8s\t\t%-8s\n", "Writer", Output["Writer"]};
{printf "%-8s\t\t%-8s\n", "Actors", Output["Actors"]};
{printf "%-8s\t\t%-8s\n", "Language", Output["Language"]};
{printf "%-8s\t\t%-8s\n", "Country", Output["Country"]};
{printf "%-8s\t\t%-8s\n", "Awards", Output["Awards"]};
{printf "%-8s\t\t%-8s\n", "Rating", Output["Rating"] " - Source: IMDB"};
{printf "%-8s\t\t%-8s\n", "Type", Output["Type"]};

if ("totalSeasons" in Output)
    {printf "%-8s\t\t%-8s\n", "Total Seasons", Output["totalSeasons"]};

{printf "\n\n%-8s\n\n%-8s\n\n", "Plot", Output["Plot"]};

}
' | fold -w $FoldWidth -s

exit 0

}
#
################################################################################
#
##### VERIFICAÇÕES #####

# Tem que ter pelo menos -T ou -i
[ $# -eq 0 ] && {

ErrorExit Não passou parâmetro/argumento nenhum. Use: ${0##*/} -h para ajuda.

}

# Tem que ter a chave da API
[ -z "$Key" ] &&  {

ErrorExit Não tem chave de API.

}

# Precisamos do curl
[ -z "$UserAgent" ] && {

ErrorExit Necessita do programa curl.

}
#
################################################################################
#
##### PEGANDO PARÂMETROS E ARGUMENTOS #####

while getopts :t:i:y:T:p:h Opt
do

    case "$Opt" in
    T)
        Title=$OPTARG

        # Na url os espaços vão codificados com '+'
        Title=${Title// /+}
        ;;
    i)
        ID=$OPTARG

        # ID do imdb é tt + 7 ou 8  digitos
        [[ "$ID" =~ ^tt[0-9]{7,8}$ ]] && : || {

        ErrorExit ID especificado errado. Use ${0##*/} -h para ajuda.

        }
        ;;
    t)
        Type=$OPTARG

        case $Type in

        series|SERIES|movie|MOVIE)
            :
            ;;
        séries|SÉRIES|série|SÉRIE|seriados|SERIADOS|seriado|SERIADO)
            Type='series'
            ;;
        filmes|FILMES|filme|FILME)
            Type='movie'
            ;;
        *)
            ErrorExit Opção -t é 'movie|MOVIE|series|SERIES'
            ;;
        esac

        CommandLine=$Category$Type$CommandLine
        ;;
    y)
        Year=$OPTARG

        # Aqui não pega se ano for por exemplo: 2008-12-12, só 12-12-2008
        Year=${Year//[[:digit:]][[:digit:]][\-\/:]}

        CommandLine=$ReleasedYear$Year$CommandLine
        ;;
    p)
        Plot=$OPTARG

        [[ "$Plot" =~ ^(full|FULL|Full|short|SHORT|Short)$ ]] && : || {

        ErrorExit Opção é: -p 'full|FULL|Full ou short|SHORT|Short'

        }

        CommandLine=${StoryLine}${Plot}${CommandLine}
        ;;
    h)
        Usage
        ;;
    *)
        ErrorExit Opção desconhecida: $Opt Use: ${0##*/} -h para ajuda.
        ;;
    esac
done

# Não pode pegar pelo título e id ao mesmo tempo.
[ -n "$Title" ] && [ -n "$ID" ] && {

ErrorExit Não pode usar -T TÍTULO e -i ID no mesmo comando.

}

# Mas tem que ter pelo menos um dos dois
[ -z "$Title" ] && [ -z "$ID" ] && {

ErrorExit Tem que especificar pelo menos um de -T TÍTULO ou -i ID.

}
#
################################################################################
#
##### EXECUTAMOS O PEDIDO #####

if [ -n "$Title" ]
then
    $UserAgent -s $QueryDatabase$TitleQuery$Title$CommandLine | Parser

elif [ -n "$ID" ]
then
    $UserAgent -s $QueryDatabase$IdQuery$ID$CommandLine | Parser

else
    ErrorExit Erro desconhecido.
fi

exit 0
#
################################################################################
